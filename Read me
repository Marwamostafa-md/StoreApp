# StoreApp

A Flutter-based store application demonstrating Clean Architecture, state management with BLoC, and local caching with SQLite.

## ðŸ“‹ Table of Contents

- [Features](#features)  
- [Prerequisites](#prerequisites)  
- [Getting Started](#getting-started)  
- [Architecture](#architecture)  
- [Folder Structure](#folder-structure)  
- [Running Tests](#running-tests)  
- [License](#license)  
- [Contact](#contact)  

---

## âœ¨ Features

- **Product Listing**: Display products fetched from a remote API.  
- **Local Caching**: Store favorite products locally using Room/SQLite.  
- **Error Handling**: Show friendly messages on network failure or data errors.  
- **Clean UI**: Responsive UI with Material Design widgets.  
- **State Management**: Business logic handled via BLoC/Cubit.  

---

## ðŸ”§ Prerequisites

- Flutter SDK 3.x or above  
- Android Studio or Visual Studio Code  
- A running REST API endpoint for product data (or mock server)  

---

## ðŸš€ Getting Started

1. **Clone the repository**  
   ```bash
   git clone https://github.com/Marwamostafa-md/StoreApp.git
   cd StoreApp
2.Install dependencies
  flutter pub get
 3.Configure your API endpoint
  static const String baseUrl = 'https://your-api.com';
4.Run the app
  flutter run
